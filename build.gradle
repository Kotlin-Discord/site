buildscript {
    repositories {
        maven {
            name = 'KotDis'
            url = 'https://maven.kotlindiscord.com/repository/maven-public/'
        }
    }
}

plugins {
    id 'application'

    id 'com.github.jakemarsden.git-hooks' version '0.0.1'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'io.gitlab.arturbosch.detekt' version '1.8.0'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}

import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer

group 'com.kotlindiscord.site'
mainClassName = "io.ktor.server.jetty.EngineMain"
targetCompatibility = 1.11
version '1.0-SNAPSHOT'

repositories {
    maven {
        name = 'KotDis'
        url = 'https://maven.kotlindiscord.com/repository/maven-public/'
    }
}

def exposedVersion = "0.24.1"
def ktorVersion = "1.3.2"

dependencies {
    implementation "io.github.microutils:kotlin-logging:1.7.9"

    implementation "io.ktor:ktor-client-apache:$ktorVersion"

    implementation "io.ktor:ktor-gson:$ktorVersion"
    implementation "io.ktor:ktor-pebble:$ktorVersion"
    implementation "io.ktor:ktor-locations:$ktorVersion"
    implementation "io.ktor:ktor-server-sessions:$ktorVersion"
    implementation "io.ktor:ktor-websockets:$ktorVersion"

    implementation "io.ktor:ktor-server-core:$ktorVersion"
    implementation "io.ktor:ktor-server-jetty:$ktorVersion"

    implementation "org.jetbrains.exposed:exposed-core:$exposedVersion"
    implementation "org.jetbrains.exposed:exposed-dao:$exposedVersion"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposedVersion"
    implementation "org.jetbrains.exposed:exposed-java-time:$exposedVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.postgresql:postgresql:42.2.2"
    implementation 'org.slf4j:slf4j-simple:1.7.29'
}

application {
    mainClassName = "io.ktor.server.jetty.EngineMain"
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

detekt {
    buildUponDefaultConfig = true
    config = files("detekt.yml")
}

gitHooks {
    hooks = ['pre-commit': 'detekt']
}

jar {
    manifest {
        attributes(
                "Main-Class": "io.ktor.server.jetty.EngineMain"
        )
    }
}

processResources {
    from ("build/semantic/") {
        into "static"
    }

    from ("node_modules/jquery/dist/") {
        into "static"
    }
}

shadowJar {
    transform(ServiceFileTransformer) {
        path = 'META-INF/services'
        include 'org.eclipse.jetty.http.HttpFieldPreEncoder'
    }
}
