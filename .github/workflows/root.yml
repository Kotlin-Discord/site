name: CI (Root)

on:
  push:
    branches:
      - root

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Sentry Release

        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

        run: |
          curl -sL https://sentry.io/get-cli/ | bash

          export SENTRY_RELEASE=$(sentry-cli releases propose-version)

          echo Release: $SENTRY_RELEASE
          echo Project: $SENTRY_PROJECT

          sentry-cli releases new $SENTRY_RELEASE --project $SENTRY_PROJECT
          sentry-cli releases set-commits --auto $SENTRY_RELEASE
          sentry-cli releases finalize $SENTRY_RELEASE

      - name: Set up Java
        uses: actions/setup-java@v1.0.0

        with:
          version: 1.11

      - name: Set up Node
        uses: actions/setup-node@v2-beta

        with:
          node-version: 12

      - name: NPM (Install/Build)
        run: npm i

      - name: Gradle (Build)
        run: sh gradlew build

      - name: Rename Artifacts
        run: |
          mkdir build/artifacts

          cp build/libs/* build/artifacts
          mv build/artifacts/*-all.jar build/artifacts/KDBot.jar
          mv build/artifacts/*-*.*.jar build/artifacts/KDBot-slim.jar

      - name: Upload artifact (Slim JAR)
        uses: actions/upload-artifact@v1.0.0

        with:
          name: Slim JAR
          path: build/artifacts/KDBot-slim.jar

      - name: Upload artifact (Production JAR)
        uses: actions/upload-artifact@v1.0.0

        with:
          name: Production JAR
          path: build/artifacts/KDBot.jar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to KotDis Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.kotlindiscord.com
          username: ${{ secrets.MAVEN_USER }}
          password: ${{ secrets.MAVEN_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            docker.kotlindiscord.com/site:latest
            ghcr.io/kotlin-discord/site:latest

      - name: Deploy to production
        run: |
          export SALTAPI_EAUTH=pam
          export SALTAPI_PASS=${{ secrets.SALT_PASSWORD  }}
          export SALTAPI_URL=https://${{ secrets.SALT_DOMAIN  }}
          export SALTAPI_USER=${{ secrets.SALT_USER }}

          sudo apt-get update -y
          sudo apt-get install python3-setuptools -y
          sudo pip3 install wheel aiohttp cached-property

          cd scripts
          python3 salt.py

      - name: Finalize Sentry

        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

        run: |
          export SENTRY_RELEASE=$(sentry-cli releases propose-version)

          sentry-cli releases deploys $SENTRY_RELEASE new -e production
          sentry-cli releases finalize $SENTRY_RELEASE
